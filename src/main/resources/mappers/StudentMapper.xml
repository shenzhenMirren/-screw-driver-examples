<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mirrentools.sd.example.mapper.StudentMapper">
	<!-- 实体类的返回map-->
	<resultMap id="result_entity_map" type="org.mirrentools.sd.example.entity.Student">
		<id column="id" property="id" />
		<result column="cid" property="cid" />
		<result column="name" property="name" />
		<result column="age" property="age" />
	</resultMap>
	<!-- assist是 SQL查询帮助类添加条件, ${req.condition}表示列名或前缀,#{req.value}表示值它是防SQL注入的 -->
	<sql id="assist">
		<where>
			<foreach collection="condition" item="req" separator=" ">
				${req.condition}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>
	<!-- having_assist用于添加having后面的条件,与assist的SQL块一样作用 -->
	<sql id="having_assist">
		<foreach collection="having" item="req" separator=" ">
			${req.condition}
			<if test="req.value != null">
				#{req.value}
			</if>
			<if test="req.values != null">
				<foreach collection="req.values" item="value" separator=",">
					#{value}
				</foreach>
			</if>
			<if test="req.suffix != null"> ${req.suffix}</if>
		</foreach>
	</sql>

	<!-- update_assist用于更新数据查询辅助工具类,与assist的SQL块一样作用 -->
	<sql id="update_assist">
		<where>
			<foreach collection="condition" item="req" separator=" ">
				${req.condition}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- 数据库中表的列名 -->
	<sql id="table_column">
		id,cid,name,age
	</sql>

	<!--获取数据总行数 -->
	<select id="getCount" parameterType="org.mirrentools.sd.example.common.SqlAssist" resultType="java.lang.Long">
		select count(*) from student
		<if test="condition != null">
			<include refid="assist" />
		</if>
		<if test="groupBy != null ">${groupBy}</if>
		<if test="having != null ">
			<include refid="having_assist" />
		</if>
	</select>

	<!-- 获取所有数据 -->
	<select id="selectAll" parameterType="org.mirrentools.sd.example.common.SqlAssist" resultMap="result_entity_map">
		select
		<if test="distinct != null">${distinct}</if>
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise>
				<include refid="table_column" />
			</otherwise>
		</choose>
		from student
		<if test="condition != null ">
			<include refid="assist" />
		</if>
		<if test="groupBy != null ">${groupBy}</if>
		<if test="having != null ">
			<include refid="having_assist" />
		</if>
		<if test="orderBy != null ">${orderBy}</if>
		<choose>
			<when test="startRow != null  and rowSize != null ">LIMIT #{startRow},#{rowSize} </when>
			<when test="rowSize != null ">LIMIT #{rowSize}</when>
		</choose>
	</select>

	<!-- 通过对象中不为空的属性为条件获取数据,只返回一条结果 -->
	<select id="selectSingleByObj" parameterType="org.mirrentools.sd.example.entity.Student" resultMap="result_entity_map">
		select
		<include refid="table_column" />
		from student
		<where>
			<if test="cid != null"> and cid = #{cid}</if>
			<if test="name != null"> and name = #{name}</if>
			<if test="age != null"> and age = #{age}</if>
			<if test="id != null"> and id = #{id}</if>
		</where>
		LIMIT 1
	</select>

	<!-- 通过对象中不为空的属性作为条件获取数据 -->
	<select id="selectByObj" parameterType="org.mirrentools.sd.example.entity.Student" resultMap="result_entity_map">
		select
		<include refid="table_column" />
		from student
		<where>
			<if test="cid != null"> and cid = #{cid}</if>
			<if test="name != null"> and name = #{name}</if>
			<if test="age != null"> and age = #{age}</if>
			<if test="id != null"> and id = #{id}</if>
		</where>
	</select>

	<!-- 插入一个对象包括属性值为null的值 -->
	<insert id="insertAll" parameterType="org.mirrentools.sd.example.entity.Student">
		insert into
		student
		(id,cid,name,age)
		values(#{id},#{cid},#{name},#{age})
	</insert>

	<!-- 插入一个对象,只插入对象中值不为null的属性 -->
	<insert id="insertNotNull" parameterType="org.mirrentools.sd.example.entity.Student">
		insert into student
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="cid != null">cid,</if>
			<if test="name != null">name,</if>
			<if test="age != null">age,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="cid != null">#{cid},</if>
			<if test="name != null">#{name},</if>
			<if test="age != null">#{age},</if>
		</trim>
	</insert>

	<!-- 批量添加全部所有字段 -->
	<insert id="insertBatch" parameterType="ArrayList">
		insert into
		student
		(id,cid,name,age)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.id},#{item.cid},#{item.name},#{item.age})
		</foreach>
	</insert>

	<!-- 插入一个对象,如果该对象不存在就新建如果该对象已经存在就更新 -->
	<insert id="replace" parameterType="org.mirrentools.sd.example.entity.Student">
		replace into
		student
		(id,cid,name,age)
		values(#{id},#{cid},#{name},#{age})
	</insert>

	<!-- 通过查询帮助类删除数据 -->
	<delete id="deleteByAssist" parameterType="org.mirrentools.sd.example.common.SqlAssist">
		delete from
		student
		<if test="condition != null">
			<include refid="assist" />
		</if>
	</delete>

	<!-- 更新一个对象中所有的属性包括null值,条件为SqlAssist查询帮助类 ,data=对象,assist=查询帮助类 -->
	<update id="updateAllByAssist" parameterType="map">
		update student
		<set>
			id = #{id},
			cid = #{cid},
			name = #{name},
			age = #{age}
		</set>
		<if test="assist !=null">
			<if test="assist.condition != null">
				<include refid="update_assist" />
			</if>
		</if>
	</update>

	<!--更新一个对象中属性不为null值,条件为SqlAssist查询帮助类,data=对象,assist=查询帮助类 -->
	<update id="updateNotNullByAssist" parameterType="map">
		update student
		<set>
			<if test="data.id != null">id = #{id},</if>
			<if test="data.cid != null">cid = #{cid},</if>
			<if test="data.name != null">name = #{name},</if>
			<if test="data.age != null">age = #{age}</if>
		</set>
		<if test="assist !=null">
			<if test="assist.condition != null">
				<include refid="update_assist" />
			</if>
		</if>
	</update>
	<!-- 通过id获取数据 -->
	<select id="selectById" parameterType="Long" resultMap="result_entity_map">
		select
		<include refid="table_column" />
		from student
		where id = #{id}
	</select>
	
	<!-- 通过id删除数据 -->
	<delete id="deleteById" parameterType="Long">
		delete from student
		where id = #{id}
	</delete>
	
	<!-- 更新一个对象中所有的属性包括null值,条件为对象中的id -->
	<update id="updateAllById" parameterType="org.mirrentools.sd.example.entity.Student">
		update student set
		<set>
			cid = #{cid},
			name = #{name},
			age = #{age}
		</set>
		where id = #{id}
	</update>

	<!-- 更新一个对象中属性不为null值,条件为对象中的id -->
	<update id="updateNotNullById" parameterType="org.mirrentools.sd.example.entity.Student">
		update student
		<set>
			<if test="cid != null">cid = #{cid},</if>
			<if test="name != null">name = #{name},</if>
			<if test="age != null">age = #{age}</if>
		</set>
		where id = #{id}
	</update>
</mapper>